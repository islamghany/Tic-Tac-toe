{"version":3,"sources":["components/user/user.jsx","components/game.jsx","components/gameOver.jsx","components/app.jsx","index.js"],"names":["User","user","className","style","color","name","score","Game","handleScore","count","counter","hasEnded","useState","field","setField","m","Map","set","fullCell","cell","get","useEffect","onClick","tl","tc","tr","ml","mc","mr","bl","bc","br","GameOver","winner","newGame","id","state","text","App","emp","user1","setUser1","user2","setUser2","scores","setScores","win","setWin","setCount","name1","name2","color1","color2","data","setdata","wait","setWait","empty","setEmpty","endGame","console","log","modal","document","querySelector","classList","add","newRound","remove","background","fontSize","el","value","onSubmit","e","preventDefault","length","htmlFor","type","onChange","target","hex","ReactDom","render"],"mappings":"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","file":"static/js/main.6d4f059b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst User=({user})=> {\r\n    return (\r\n        <div className=\"first t\" >\r\n           <h1 className=\"heading font-lg bang capitalize\" \r\n           style={{\r\n               color:user.color\r\n           }}\r\n           >{user.name}</h1>\r\n           <p className=\"font-sm inco font-md capitalize\">score: {user.score}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React,{useState,useEffect} from 'react'\r\n\r\nconst Game=({handleScore,score,count,counter,hasEnded})=> {\r\n    const [field , setField] =useState('X');\r\n    let m = new Map();\r\n     m.set('O','X');\r\n     m.set('X','O');\r\n    const fullCell=(cell)=>{\r\n      if(!score[cell]){\r\n        counter(); \r\n        handleScore(cell,field);\r\n        setField(m.get(field));\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      hasEnded(count)\r\n    },[count, hasEnded]);\r\n    return (\r\n        <div className=\"game\">\r\n         <table>\r\n            <tr>\r\n            <th onClick={()=>{\r\n               fullCell('tl')\r\n            }}>{score.tl}</th>\r\n            <th  onClick={()=>{\r\n               fullCell('tc')\r\n            }}>{score.tc}</th>\r\n            <th  onClick={()=>{\r\n               fullCell('tr')\r\n             }}>{score.tr}</th>\r\n            </tr> \r\n            <tr>\r\n            <th onClick={()=>{\r\n               fullCell('ml')\r\n            }}>{score.ml}</th>\r\n            <th  onClick={()=>{\r\n               fullCell('mc')\r\n            }}>{score.mc}</th>\r\n            <th  onClick={()=>{\r\n               fullCell('mr')\r\n             }}>{score.mr}</th>\r\n            </tr> \r\n            <tr>\r\n            <th onClick={()=>{\r\n               fullCell('bl')\r\n            }}>{score.bl}</th>\r\n            <th  onClick={()=>{\r\n               fullCell('bc')\r\n            }}>{score.bc}</th>\r\n            <th  onClick={()=>{\r\n               fullCell('br')\r\n             }}>{score.br}</th>\r\n            \r\n            </tr> \r\n        </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\r\n\r\nfunction GameOver({winner,newGame}) {\r\n    return (\r\n        <div className=\"container\" id=\"mod\">\r\n            <div className=\"container__model\">\r\n                <h1 className=\"heading font-lg mont capitalize\" style={{\r\n                    color:winner.color\r\n                }}>\r\n                   {winner.state}\r\n                </h1>\r\n                <p className=\"font-md rele capitalize\"><span style={{\r\n                    color:winner.color\r\n                }}>{winner.name}</span> {winner.text}</p>\r\n                <button className=\"btn btn--contained-success circle\" onClick={()=>newGame()}>\r\n                    Play one More\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameOver\r\n","import React,{useState} from 'react'\r\nimport User from './user/user'\r\nimport Game from './game'\r\nimport GameOver from './gameOver';\r\nimport { SliderPicker } from \"react-color\";\r\nconst App=()=> {\r\n    const emp={tl:'',tc:'',tr:'',ml:'',mc:'',mr:'',bl:'',bc:'',br:''};\r\n    const [user1,setUser1] = useState({name:'player 1',color:'#DF0045',score:0});\r\n    const [user2,setUser2] = useState({name:'player 2',color:'#15038C',score:0});\r\n    const [scores,setScores] = useState({...emp});\r\n    const [win,setWin] =useState({name:'',state:'',text:'',color:''});\r\n    const [count,setCount]=useState(0);\r\n    const [data,setdata]=useState({\r\n        name1:user1.name,\r\n        name2:user2.name,\r\n        color1:user1.color,\r\n        color2:user2.color\r\n    });\r\n    const [wait,setWait]=useState(true);\r\n    const [empty,setEmpty]=useState(false)     \r\n    let winner=new Map();\r\n    winner.set('X',user1.name);\r\n    winner.set('O',user2.name);\r\n    const endGame=(winner)=>{\r\n        setWait(false);\r\n        console.log(count);\r\n     var modal= document.querySelector('#mod');\r\n             if(winner ==='X'){\r\n                 setUser1({\r\n                     ...user1,\r\n                    score:user1.score+1\r\n                 });\r\n                setWin({\r\n                    name:user1.name,\r\n                    state:'winner winner checken dinner',\r\n                    text:'has won this round',\r\n                    color:user1.color \r\n                })\r\n               \r\n             }\r\n             else if(winner === 'O'){\r\n                setUser2({\r\n                    ...user2,\r\n                   score:user2.score+1\r\n                });\r\n                setWin({\r\n                    name:user2.name,\r\n                    state:'winner winner checken dinner',\r\n                    text:'has won this round',\r\n                    color:user2.color \r\n                })\r\n               \r\n             }\r\n             else{\r\n                setWin({\r\n                    name:'',\r\n                    state:'Draw',\r\n                    text:'this round has ended with a tie',\r\n                    color:\"#23d160\" \r\n                })\r\n             }\r\n            \r\n             modal.classList.add('wobble');  \r\n     }\r\n    const handleScore=(el,value)=>{\r\n        if(!scores[el]){\r\n     setScores({\r\n         ...scores,\r\n         [el]:value\r\n     }\r\n     )\r\n    }\r\n    \r\n    }\r\n    const newGame=()=>{\r\n       setUser1({\r\n           ...user1,\r\n           score:0,\r\n       });\r\n       setUser2({\r\n        ...user2,\r\n        score:0,\r\n    });\r\n        setScores({...emp})\r\n        setWait(true);\r\n        setCount(0);\r\n    }\r\n    \r\n    const counter =()=>{setCount(count+1);}\r\n    const hasEnded=(count)=>{\r\n        if(wait && scores.tl && scores.tl === scores.tc && scores.tl === scores.tr)endGame(scores.tl);\r\n        else if(wait && scores.tl && scores.tl === scores.ml && scores.tl === scores.bl) endGame(scores.tl);\r\n        else if(wait && scores.tl && scores.tl === scores.mc && scores.tl === scores.br) endGame(scores.tl)\r\n        else if(wait && scores.tc && scores.tc === scores.mc && scores.tc === scores.bc) endGame(scores.tc);\r\n        else if(wait && scores.ml && scores.ml === scores.mc && scores.mc === scores.mr) endGame(scores.mc);\r\n        else if(wait && scores.bl && scores.bl === scores.bc && scores.bc === scores.br) endGame(scores.bc);\r\n        else if(wait && scores.tr && scores.tr === scores.mr && scores.tr === scores.br) endGame(scores.tr);\r\n        else if(wait && scores.tr && scores.tr === scores.mc && scores.bl === scores.tr) endGame(scores.tr);\r\n        else if(wait && count===9) endGame('T'); \r\n         \r\n    }\r\n    //   const hasEnded=(count)=>{\r\n    //           console.log(count);\r\n    //   }   \r\n    const newRound=()=>{\r\n        var modal= document.querySelector('#mod');\r\n        modal.classList.remove('wobble');\r\n        setScores({...emp});\r\n        setWait(true);\r\n        setCount(0);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(!data.name1 || !data.name2 || data.name1.length >10 || data.name2.length>10){\r\n            setEmpty(true);\r\n        }\r\n        else{\r\n            setUser1({\r\n                ...user1,\r\n                name:data.name1,\r\n                color:data.color1\r\n            })\r\n            setUser2({\r\n                ...user2,\r\n                name:data.name2,\r\n                color:data.color2\r\n            })\r\n            setEmpty(false);\r\n            var modal= document.querySelector('#mod2');\r\n            modal.classList.remove('wobble');\r\n        }\r\n    }\r\n    return (\r\n       <div className=\"layout\" style={{\r\n        background: `linear-gradient(219deg,rgba(246,246,246,.02) 0,rgba(246,246,246,.02) 20%,rgba(225,225,225,.02) 20%,rgba(225,225,225,.02) 40%,rgba(136,136,136,.02) 40%,rgba(136,136,136,.02) 60%,rgba(216,216,216,.02) 60%,rgba(216,216,216,.02) 80%,rgba(35,35,35,.02) 80%,rgba(35,35,35,.02) 100%),linear-gradient(299deg,rgba(213,213,213,.02) 0,rgba(213,213,213,.02) 20%,rgba(150,150,150,.02) 20%,rgba(150,150,150,.02) 40%,rgba(161,161,161,.02) 40%,rgba(161,161,161,.02) 60%,rgba(186,186,186,.02) 60%,rgba(186,186,186,.02) 80%,rgba(28,28,28,.02) 80%,rgba(28,28,28,.02) 100%),linear-gradient(50deg,rgba(157,157,157,.02) 0,rgba(157,157,157,.02) 16.667%,rgba(147,147,147,.02) 16.667%,rgba(147,147,147,.02) 33.334%,rgba(42,42,42,.02) 33.334%,rgba(42,42,42,.02) 50.001%,rgba(214,214,214,.02) 50.001%,rgba(214,214,214,.02) 66.668%,rgba(34,34,34,.02) 66.668%,rgba(34,34,34,.02) 83.335%,rgba(211,211,211,.02) 83.335%,rgba(211,211,211,.02) 100.002%),linear-gradient(278deg,rgba(79,79,79,.03) 0,rgba(79,79,79,.03) 20%,rgba(217,217,217,.03) 20%,rgba(217,217,217,.03) 40%,rgba(5,5,5,.03) 40%,rgba(5,5,5,.03) 60%,rgba(200,200,200,.03) 60%,rgba(200,200,200,.03) 80%,rgba(125,125,125,.03) 80%,rgba(125,125,125,.03) 100%),linear-gradient(274deg,rgba(235,235,235,.03) 0,rgba(235,235,235,.03) 12.5%,rgba(100,100,100,.03) 12.5%,rgba(100,100,100,.03) 25%,rgba(44,44,44,.03) 25%,rgba(44,44,44,.03) 37.5%,rgba(228,228,228,.03) 37.5%,rgba(228,228,228,.03) 50%,rgba(36,36,36,.03) 50%,rgba(36,36,36,.03) 62.5%,rgba(72,72,72,.03) 62.5%,rgba(72,72,72,.03) 75%,rgba(30,30,30,.03) 75%,rgba(30,30,30,.03) 87.5%,rgba(109,109,109,.03) 87.5%,rgba(109,109,109,.03) 100%),linear-gradient(90deg,${user1.color},${user2.color})`\r\n\r\n       }}>\r\n\r\n           <GameOver winner={win} newGame={newRound}/>\r\n           <div className =\"scores\">\r\n           <User user={user1}/>\r\n           <h1 className=\"heading upper font-hg bang middle\"  style={{fontSize:'7rem', color:user1.color}}>V<span style={{color:user2.color}}>S</span></h1>\r\n           <User user={user2} />\r\n           </div>   \r\n           <Game score={scores} handleScore={handleScore} count={count} counter={counter} hasEnded={hasEnded}/>\r\n           >\r\n           <div className=\"head\">\r\n               <button className=\"btn btn--wave-white circle\" onClick={newRound}>new round</button>\r\n               <button className=\"btn btn--wave-white circle\" onClick={newGame}>restart the whole game</button>\r\n               <button className=\"btn btn--wave-white circle\" onClick={()=>{\r\n                   document.querySelector('#mod2').classList.add('wobble');\r\n               }}>settings</button>\r\n           </div>\r\n           <div className=\"container cont2\" id=\"mod2\">\r\n              <div className=\"container__settings\">\r\n                  <form onSubmit={handleSubmit}>\r\n                     \r\n                 <div className=\"form\">\r\n                 <h1 className=\"heading mont font-md\">User 1</h1>\r\n                     <div className=\"form__container\">\r\n                         <label htmlFor=\"name1\" className=\"form__label\">Name</label>\r\n                         <input type=\"text\" className=\"form__input\" id=\"name1\"\r\n                          value={data.name1} onChange={(e)=>{\r\n                              setdata({\r\n                                  ...data,\r\n                                  name1:e.target.value\r\n                              })\r\n                          }} name=\"name1\"/>\r\n                           <label  className=\"form__label\">Color</label>\r\n                          <SliderPicker\r\n                color={data.color1}\r\n                onChange={(e)=>{\r\n                    setdata({\r\n                        ...data,\r\n                        color1:e.hex\r\n                    })\r\n                }}\r\n              />\r\n                     </div>\r\n                 </div>\r\n                 <hr />\r\n                 <div className=\"form\">\r\n                 <h1 className=\"heading mont font-md\">User 2</h1>\r\n                     <div className=\"form__container\">\r\n                         <label htmlFor=\"name1\" className=\"form__label\">Name</label>\r\n                         <input type=\"text\" className=\"form__input\" id=\"name1\"\r\n                          value={data.name2} onChange={(e)=>{\r\n                              setdata({\r\n                                  ...data,\r\n                                  name2:e.target.value\r\n                              })\r\n                          }} name=\"name2\"/>\r\n                                    <label  className=\"form__label\">Color</label>\r\n                          <SliderPicker\r\n                color={data.color2}\r\n                onChange={(e)=>{\r\n                    setdata({\r\n                        ...data,\r\n                        color2:e.hex\r\n                    })\r\n                }}\r\n              />\r\n                     </div>\r\n                 </div>\r\n                 {empty && <p className=\"rele font-ty upper\" >name fields must be not empty\r\n                      and the field length dose not exceded 10 charcteres.\r\n                 </p>}\r\n                 <div className=\"submit\">\r\n                 <button className=\"btn btn--contained-success circle\">submit</button>\r\n                 <span className=\"btn btn--contained-dark circle\"\r\n                 onClick={()=>{\r\n                    var modal= document.querySelector('#mod2');\r\n                    modal.classList.remove('wobble');\r\n                 }}\r\n                 >cancel</span>\r\n                 </div>\r\n                  </form>\r\n              </div>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/app'\r\nimport './style/style.scss';\r\nReactDom.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}